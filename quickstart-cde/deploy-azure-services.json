{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "azuredataexplorer_name": {
            "defaultValue": "{your data explorer name - lowercase letters and numbers only}",
            "type": "String",
            "metadata": {
                "description": "Azure Data Explorer cluster name. The name can contain only lowercase letters and numbers."
            }
        },
        "eventhubs_name": {
            "defaultValue": "{your event hubs namespace name - lowercase letters and numbers only}",
            "type": "String",
            "metadata": {
                "description": "Azure Event Hubs namespace name. The name can contain only lowercase letters and numbers."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "eventHubName": "centraltelemetry",
        "namespaceAuthorizationRuleName": "RootManageSharedAccessKey",
        "eventhubAuthorizationRuleName": "manage",
        "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventhubs_name'), variables('defaultSASKeyName'))]",
        "nsAuthorizationRuleId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventhubs_name'), variables('namespaceAuthorizationRuleName'))]",
        "ehAuthorizationRuleId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventhubs_name'),variables('eventHubName'), variables('eventhubAuthorizationRuleName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2021-01-01-preview",
            "name": "[parameters('eventhubs_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 1
            },
            "properties": {
                "zoneRedundant": true,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": false
            },
            "tags": {
                "Created By": "IoT Central quickstart template"
            }
        },
        {
            "name": "[concat(parameters('azuredataexplorer_name'), '/iotcentraldata')]",
            "type": "Microsoft.Kusto/clusters/databases",
            "apiVersion": "2020-09-18",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', parameters('azuredataexplorer_name'))]"
            ],
            "properties": {
                "softDeletePeriodInDays": 365,
                "hotCachePeriodInDays": 31
            }
        },
        {
            "type": "Microsoft.Kusto/Clusters",
            "apiVersion": "2020-09-18",
            "name": "[parameters('azuredataexplorer_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_D13_v2",
                "tier": "Standard",
                "capacity": 2
            },
            "tags": {
                "Created By": "IoT Central quickstart template"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('eventhubs_name'), '/', variables('defaultSASKeyName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubs_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('eventhubs_name'), '/', variables('eventHubName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubs_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('eventhubs_name'), '/', variables('eventHubName'), '/', variables('eventhubAuthorizationRuleName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventhubs_name'), variables('eventHubName'))]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubs_name'))]"
            ],
            "properties": {
                "rights": [
                    "Manage",
                    "Listen",
                    "Send"
                ]
            }
        }
    ],
    "outputs": {
        "defaultNamespaceConnectionString": {
        "type": "string",
        "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
        },
        "defaultSharedAccessPolicyPrimaryKey": {
        "type": "string",
        "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryKey]"
        },
        "NamespaceConnectionString": {
        "type": "string",
        "value": "[listkeys(variables('nsAuthorizationRuleId'), '2017-04-01').primaryConnectionString]"
        },
        "SharedAccessPolicyPrimaryKey": {
        "type": "string",
        "value": "[listkeys(variables('nsAuthorizationRuleId'), '2017-04-01').primaryKey]"
        },
        "EventHubConnectionString": {
        "type": "string",
        "value": "[listkeys(variables('ehAuthorizationRuleId'), '2017-04-01').primaryConnectionString]"
        },
        "EventHubSharedAccessPolicyPrimaryKey": {
        "type": "string",
        "value": "[listkeys(variables('ehAuthorizationRuleId'), '2017-04-01').primaryKey]"
        }
    }
}